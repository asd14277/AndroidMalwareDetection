# coding=utf-8
# https://www.jianshu.com/p/ee5f3c7779ec
import urllib
import requests
import re
from bs4 import BeautifulSoup
import time
_root_url = "http://app.mi.com"  # 应用市场主页网址
class spider(object):
    def __init__(self):
        print(u'准备开始爬取内容')
    def parser_apks(self, count=30):
        res_parser = {}
        # 设置爬取的页面，从第一页开始爬取，第一页爬完爬取第二页，以此类推
        page_num = 5
        package_name=""
        while count:
            # 获取应用列表页面
            wbdata = requests.get("http://app.mi.com/catTopList/7?page=" + str(page_num)).text
            print("开始爬取第" + str(page_num) + "页")
            # 解析应用列表页面内容
            soup = BeautifulSoup(wbdata, "html.parser")
            links = soup.find_all("a", href=re.compile("/details?"), class_="", alt="")
            if len(links)==0:
                break
            for link in links:
                # 获取应用详情页面的链接
                detail_link = urllib.parse.urljoin(_root_url, str(link["href"]))
                last_name = package_name
                package_name = detail_link.split("=")[1]
                download_page = requests.get(detail_link).text
                #解析应用详情页面
                soup1 = BeautifulSoup(download_page, "html.parser")
                download_link = soup1.find(class_="download")["href"]
                #获取直接下载的链接
                download_url = urllib.parse.urljoin(_root_url, str(download_link))
                # 解析后会有重复的结果，通过判断去重
                if download_url not in res_parser.values():
                    res_parser[package_name] = download_url
                    count = count - 1
                    if package_name!=last_name:
                        print("正在获取应用%d: %s" %(count/2,package_name))
                if count == 0:
                    break
            if count > 0:
                page_num = page_num + 1
            time.sleep(5)
        print("爬取apk数量为: " + str(len(res_parser)))
        return res_parser
if __name__ == "__main__":
    res_dic = spider().parser_apks(100)
    save_path="./info.txt"
    for apk in res_dic.keys():
        with open(save_path,'a') as f:
            f.write(res_dic[apk]+'\n')
        # urllib.request.urlretrieve(, save_path + apk + ".apk")
    print("获取完成")