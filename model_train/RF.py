# -*- coding: utf-8 -*-
import sys
sys.path.append('..')
import numpy as np
from sklearn.metrics import confusion_matrix, classification_report, roc_auc_score
from sklearn.model_selection import train_test_split
from sklearn.metrics.classification import accuracy_score
import pickle
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
import matplotlib.pyplot as plt
from matplotlib.font_manager import FontProperties
from sklearn.metrics import roc_curve, auc
from sklearn.externals import joblib

np.random.seed(1337)  # for reproducibility

dataset = pd.read_csv("../data/sample.csv")

X = dataset.drop("label", 1).values
Y = dataset["label"].values
# Training
num_list = []
accuracy_list = []
font = FontProperties(fname=r"C:\Windows\Fonts\Deng.ttf", size=14)
l=1800 # len
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=300, random_state=0)
clf = RandomForestClassifier(n_estimators=60)
classifier = clf.fit(X_train, Y_train)
Y_pred=classifier.predict(X_test)
for k in range(50, l, 50):
    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=k, random_state=0)
    clf = RandomForestClassifier(n_estimators=50) # 100 trees # train model / ravel to flatten the array structure from [[]] to []
    classifier = clf.fit(X_train, Y_train) # evaluate on testdata
    accuracy = classifier.score(X_test, Y_test)
    print(classifier.predict(X_test))
    num_list.append(l-k)
    accuracy_list.append(accuracy)
accuracy_list=np.array(accuracy_list)
plt.figure()
plt.plot(num_list, accuracy_list)
plt.title(u'Android恶意软件检测准确度与决策树数量的关系——随机森林算法\n(权限与API)',FontProperties=font)
plt.xlabel(u'决策树数量',FontProperties=font)
plt.ylabel(u'检测准确度',FontProperties=font)
plt.ylim(0.98)
plt.show()

# # 存储训练模型
# joblib.dump(classifier,'train_model_byRandomForest_API.m')
